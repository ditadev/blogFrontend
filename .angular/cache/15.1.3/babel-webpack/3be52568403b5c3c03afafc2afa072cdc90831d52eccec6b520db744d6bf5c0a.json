{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ResetpasswordComponent = class ResetpasswordComponent {\n  constructor(apiService, router) {\n    this.apiService = apiService;\n    this.router = router;\n    this.toast = false;\n  }\n  ngOnInit() {\n    this._resetPassword = {};\n  }\n  resetPassword() {\n    this.subscription = this.apiService.resetPassword(this._resetPassword).subscribe(response => {\n      this.message = response.message;\n      console.log(this.message);\n      this.code = response.code;\n      console.log(this.code);\n      if (this.code == 0) {\n        this.toast = !this.toast;\n        this.router.navigate([\"login\"]);\n      }\n    });\n  }\n  toaster() {\n    this.toast = !this.toast;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n};\nResetpasswordComponent = __decorate([Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})], ResetpasswordComponent);\nexport { ResetpasswordComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAYrD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YACUC,UAAsB,EACtBC,MAAc;IADd,eAAU,GAAVD,UAAU;IACV,WAAM,GAANC,MAAM;IAJhB,UAAK,GAAS,KAAK;EAKhB;EAGHC,QAAQ;IACN,IAAI,CAACC,cAAc,GAAG,EAAmB;EAC3C;EAEAC,aAAa;IACX,IAAI,CAACC,YAAY,GAAG,IAAI,CAACL,UAAU,CAACI,aAAa,CAAC,IAAI,CAACD,cAAc,CAAC,CAACG,SAAS,CAAEC,QAAQ,IAAG;MAAE,IAAI,CAACC,OAAO,GAACD,QAAQ,CAACC,OAAO;MAC1HC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;MACzB,IAAI,CAACG,IAAI,GAACJ,QAAQ,CAACI,IAAI;MACjBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC;MACtB,IAAG,IAAI,CAACA,IAAI,IAAE,CAAC,EAAC;QACd,IAAI,CAACC,KAAK,GAAC,CAAC,IAAI,CAACA,KAAK;QACtB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAEzC,CAAC,CAAC;EACJ;EAEAC,OAAO;IACL,IAAI,CAACF,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK;EAC1B;EAEAG,WAAW;IACT,IAAI,IAAI,CAACV,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,CAACW,WAAW,EAAE;;EAEnC;CACD;AAvCYlB,sBAAsB,eALlCD,SAAS,CAAC;EACToB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACWrB,sBAAsB,CAuClC;SAvCYA,sBAAsB","names":["Component","ResetpasswordComponent","constructor","apiService","router","ngOnInit","_resetPassword","resetPassword","subscription","subscribe","response","message","console","log","code","toast","navigate","toaster","ngOnDestroy","unsubscribe","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/abb/sources/inyakaabraham/Hobby-Project/blogFrontend/src/app/components/resetpassword/resetpassword.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { ResetPassword } from 'src/app/models/resetPassword';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements  OnDestroy {\n\n  subscription?: Subscription;\n  _resetPassword!:ResetPassword;\n  message?: string;\n  code?:number;\n  toast:boolean=false;\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router\n  ) {}\n\n\n  ngOnInit(): void {\n    this._resetPassword = {} as ResetPassword;\n  }\n\n  resetPassword():void{\n    this.subscription = this.apiService.resetPassword(this._resetPassword).subscribe( response => {this.message=response.message;\n      console.log(this.message);\n      this.code=response.code;\n            console.log(this.code);\n            if(this.code==0){\n              this.toast=!this.toast;\n              this.router.navigate([\"login\"]);\n              }\n    });\n  }\n\n  toaster(){\n    this.toast = !this.toast;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}