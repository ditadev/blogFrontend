{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nexport class ResetpasswordComponent {\n  constructor(apiService, route, location) {\n    this.apiService = apiService;\n    this.route = route;\n    this.location = location;\n    this.toast = false;\n  }\n  resetPassword() {\n    const data = {\n      param1: this._email,\n      param2: this._token,\n      param3: 'value3',\n      param4: 'value4'\n    };\n    this.subscription = this.apiService.resetPassword().subscribe(response => {\n      this.message = response.message;\n      console.log(this.message);\n      this.code = response.code;\n      console.log(this.code);\n      if (this.code == 0) {\n        this.toast = !this.toast;\n        this.location.go(\"/login\");\n      }\n    });\n  }\n  toaster() {\n    this.toast = !this.toast;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\nResetpasswordComponent.ɵfac = function ResetpasswordComponent_Factory(t) {\n  return new (t || ResetpasswordComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Location));\n};\nResetpasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetpasswordComponent,\n  selectors: [[\"app-resetpassword\"]],\n  decls: 2,\n  vars: 0,\n  template: function ResetpasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"resetpassword works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,sBAAsB;EAWjCC,YACUC,UAAsB,EACtBC,KAAqB,EACrBC,QAAkB;IAFlB,eAAU,GAAVF,UAAU;IACV,UAAK,GAALC,KAAK;IACL,aAAQ,GAARC,QAAQ;IALlB,UAAK,GAAS,KAAK;EAMhB;EAEHC,aAAa;IACX,MAAMC,IAAI,GAAG;MACXC,MAAM,EAAE,IAAI,CAACC,MAAM;MACnBC,MAAM,EAAE,IAAI,CAACC,MAAM;MACnBC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;KACT;IAED,IAAI,CAACC,YAAY,GAAG,IAAI,CAACX,UAAU,CAACG,aAAa,EAAE,CAACS,SAAS,CAAEC,QAAQ,IAAG;MAAE,IAAI,CAACC,OAAO,GAACD,QAAQ,CAACC,OAAO;MACvGC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;MACzB,IAAI,CAACG,IAAI,GAACJ,QAAQ,CAACI,IAAI;MACjBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC;MACtB,IAAG,IAAI,CAACA,IAAI,IAAE,CAAC,EAAC;QACd,IAAI,CAACC,KAAK,GAAC,CAAC,IAAI,CAACA,KAAK;QACtB,IAAI,CAAChB,QAAQ,CAACiB,EAAE,CAAC,QAAQ,CAAC;;IAEpC,CAAC,CAAC;EACJ;EAEAC,OAAO;IACL,IAAI,CAACF,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK;EAC1B;EAEAG,WAAW;IACT,IAAI,IAAI,CAACV,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,CAACW,WAAW,EAAE;;EAEnC;;AA5CWxB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAyB;EAAAC;EAAAC;EAAAC;IAAA;MCXnCC,yBAAG;MAAAA,oCAAoB;MAAAA,iBAAI","names":["ResetpasswordComponent","constructor","apiService","route","location","resetPassword","data","param1","_email","param2","_token","param3","param4","subscription","subscribe","response","message","console","log","code","toast","go","toaster","ngOnDestroy","unsubscribe","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/abb/sources/inyakaabraham/Hobby-Project/blogFrontend/src/app/components/resetpassword/resetpassword.component.ts","/Users/abb/sources/inyakaabraham/Hobby-Project/blogFrontend/src/app/components/resetpassword/resetpassword.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { Location } from '@angular/common';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements  OnDestroy {\n\n  subscription?: Subscription;\n  _email?:string;\n  _token?:string;\n  _password?:string;\n  _confirmPassword?:string;\n  message?: string;\n  code?:number;\n  toast:boolean=false;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private location: Location,\n  ) {}\n\n  resetPassword():void{\n    const data = {\n      param1: this._email,\n      param2: this._token,\n      param3: 'value3',\n      param4: 'value4'\n    };\n\n    this.subscription = this.apiService.resetPassword().subscribe( response => {this.message=response.message;\n      console.log(this.message);\n      this.code=response.code;\n            console.log(this.code);\n            if(this.code==0){\n              this.toast=!this.toast;\n              this.location.go(\"/login\");\n              }\n    });\n  }\n\n  toaster(){\n    this.toast = !this.toast;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<p>resetpassword works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}